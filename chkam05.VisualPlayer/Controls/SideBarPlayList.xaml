<UserControl 
    x:Class="chkam05.VisualPlayer.Controls.SideBarPlayList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:components="clr-namespace:chkam05.VisualPlayer.Components"
    xmlns:converters="clr-namespace:chkam05.VisualPlayer.Converters"
    xmlns:local="clr-namespace:chkam05.VisualPlayer.Controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:controlsex="clr-namespace:chkam05.Tools.ControlsEx;assembly=chkam05.Tools.ControlsEx"
    mc:Ignorable="d" 
    
    d:DesignHeight="450"
    d:DesignWidth="800"
    Foreground="White"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/Components/Styles.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/Standard/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <RelativeSource x:Key="RelativeSelf" Mode="FindAncestor" AncestorType="{x:Type UserControl}"/>

            <!-- Converters. -->
            <converters:IPlayableNowPlayingConverter x:Key="IPlayableNowPlayingConverter"/>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>

            <!-- Styles. -->
            <Style TargetType="{x:Type controlsex:ButtonEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.IfaceButtonBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.IfaceButtonBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.IfaceButtonForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="IconHeight" Value="28"/>
                <Setter Property="IconWidth" Value="28"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.IfaceMouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.IfaceMouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.IfaceMouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="PressedBackground" Value="{Binding ConfigManager.IfacePressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBorderBrush" Value="{Binding ConfigManager.IfacePressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedForeground" Value="{Binding ConfigManager.IfacePressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ContextMenuEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.IfaceContextMenuBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.IfaceContextMenuBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ContextMenuItemEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.IfaceMouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.IfaceMouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.IfaceMouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="IconColorBrush" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style BasedOn="{StaticResource ContextMenuSeparatorStyle}" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ScrollViewerEx}">
                <Setter Property="ScrollBarThumbMargin" Value="0,2,8,2"/>
                <Setter Property="ScrollBarVerticalWidth" Value="16"/>
                <Setter Property="ScrollBarThumbBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarThumbBorderBrush" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarDraggingThumbBackground" Value="{Binding ConfigManager.IfacePressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarDraggingThumbBorderBrush" Value="{Binding ConfigManager.IfacePressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarMouseOverThumbBackground" Value="{Binding ConfigManager.IfaceMouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarMouseOverThumbBorderBrush" Value="{Binding ConfigManager.IfaceMouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>
            
            <Style TargetType="{x:Type controlsex:ListViewEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="6,0,2,0"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            </Style>

            <Style x:Key="PlayList_ListViewItemExStyle" TargetType="{x:Type controlsex:ListViewItemEx}">
                <EventSetter Event="Drop" Handler="PlayList_ExtendedListViewItem_Drop"/>
                <EventSetter Event="MouseDoubleClick" Handler="PlayListItem_DoubleClick"/>
                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="PlayList_ExtendedListViewItem_PreviewMouseDown"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.IfaceForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Margin" Value="2,2,2,0"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.IfaceMouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.IfaceMouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.IfaceMouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBackground" Value="{Binding ConfigManager.IfaceSelectedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBorderBrush" Value="{Binding ConfigManager.IfaceSelectedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedForeground" Value="{Binding ConfigManager.IfaceSelectedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveBackground" Value="{Binding ConfigManager.InactiveBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveBorderBrush" Value="{Binding ConfigManager.InactiveBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveForeground" Value="{Binding ConfigManager.InactiveForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <!-- Data Templates. -->
            <DataTemplate x:Key="NowPlayingDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Height="32" Width="auto">
                        <materialDesign:PackIcon.Kind>
                            <MultiBinding Converter="{StaticResource IPlayableNowPlayingConverter}">
                                <Binding Path="NowPlaying"></Binding>
                                <Binding Path="Cover"></Binding>
                            </MultiBinding>
                        </materialDesign:PackIcon.Kind>
                    </materialDesign:PackIcon>

                    <TextBlock
                        Margin="8,0"
                        Text="{Binding FileName}"
                        VerticalAlignment="Center"/>
                </StackPanel>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <controlsex:ListViewEx
            x:Name="playListView"
            ItemContainerStyle="{StaticResource PlayList_ListViewItemExStyle}"
            ItemsSource="{Binding Player.PlayList.DataContext, Mode=TwoWay}"
            ItemTemplate="{StaticResource NowPlayingDataTemplate}"
            Grid.Row="1"
            SelectedItem="{Binding SelectedItem}"
            PreviewMouseDown="PlayListView_PreviewMouseDown">

            <controlsex:ListViewEx.ContextMenu>
                <controlsex:ContextMenuEx
                    Closed="ExtendedContextMenu_Closed">

                    <controlsex:ContextMenuItemEx
                        Header="Play"
                        IconKind="Play"
                        Click="PlayListItem_ExtendedContextMenuItemPlay_Click"/>

                    <controlsex:ContextMenuItemEx
                        Header="Remove"
                        IconKind="Trash"
                        Click="PlayListItem_ExtendedContextMenuItemRemove_Click"/>

                </controlsex:ContextMenuEx>
            </controlsex:ListViewEx.ContextMenu>
            
        </controlsex:ListViewEx>

        <Grid
            Margin="8,8,8,4">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controlsex:ButtonEx
                Grid.Column="0"
                Content="{x:Null}"
                IconKind="ArrowBack"
                Click="BackButton_Click"/>

            <TextBlock
                Grid.Column="1"
                Foreground="{Binding ConfigManager.IfaceForegroundColorBrush}"
                FontSize="18"
                FontWeight="SemiBold"
                Margin="8,0"
                Text="Now Playing"
                VerticalAlignment="Center"/>

            <controlsex:ButtonEx
                Grid.Column="2"
                Content="{x:Null}"
                IconKind="MoreHoriz"
                Click="OptionButton_Click"
                PreviewMouseDown="OptionButton_PreviewMouseDown">

                <controlsex:ButtonEx.ContextMenu>
                    <controlsex:ContextMenuEx
                        Closed="ExtendedContextMenu_Closed">

                        <controlsex:ContextMenuItemEx
                            Header="Play from beginning"
                            IconKind="Play"
                            Click="MoreExtendedContextMenuItemPlay_Click"/>

                        <Separator/>

                        <controlsex:ContextMenuItemEx
                            Header="Open playlist"
                            IconKind="FolderOpen"
                            Click="MoreExtendedContextMenuItemOpenPlayList_Click"/>

                        <controlsex:ContextMenuItemEx
                            Header="Save playlist"
                            IconKind="ContentSave"
                            Click="MoreExtendedContextMenuItemSavePlayList_Click"/>

                        <Separator/>

                        <controlsex:ContextMenuItemEx
                            Header="Add more"
                            IconKind="FolderOpen"
                            Click="MoreExtendedContextMenuItemAddItem_Click"/>

                        <controlsex:ContextMenuItemEx
                            Header="Sort"
                            IconKind="Sort">

                            <controlsex:ContextMenuItemEx
                                Header="By Title ascending"
                                IconKind="SortAlphabeticalAscending"
                                Click="MoreExtendedContextMenuItemSortByTitleAsc_Click"/>

                            <controlsex:ContextMenuItemEx
                                Header="By Title descending"
                                IconKind="SortAlphabeticalDescending"
                                Click="MoreExtendedContextMenuItemSortByTitleDesc_Click"/>

                        </controlsex:ContextMenuItemEx>

                        <controlsex:ContextMenuItemEx
                            Header="Clear playlist"
                            IconKind="Trash"
                            Click="MoreExtendedContextMenuItemClearPlayList_Click"/>

                        <Separator/>

                        <controlsex:ContextMenuItemEx
                            Header="Stay on top"
                            IsCheckable="True"
                            IsChecked="{Binding ConfigManager.PlayListAutoHide, Converter={StaticResource InverseBoolConverter}}"/>

                    </controlsex:ContextMenuEx>
                </controlsex:ButtonEx.ContextMenu>
                
            </controlsex:ButtonEx>

        </Grid>
            
    </Grid>
    
</UserControl>
