<Page 
    x:Class="chkam05.VisualPlayer.Pages.Settings.SettingsGeneralPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:chkam05.VisualPlayer.Pages.Settings"
    xmlns:controlsex="clr-namespace:chkam05.Tools.ControlsEx;assembly=chkam05.Tools.ControlsEx"
    xmlns:converters="clr-namespace:chkam05.VisualPlayer.Converters"
    xmlns:converters_config="clr-namespace:chkam05.VisualPlayer.Converters.Settings"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    
    d:DesignWidth="800"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Foreground="White"
    Unloaded="Page_Unloaded">

    <Page.Resources>
        <ResourceDictionary>

            <RelativeSource x:Key="RelativeSelf" Mode="FindAncestor" AncestorType="{x:Type Page}"/>

            <!-- CONVERTERS -->

            <converters:MarqueeStateNameConverter x:Key="MarqueeStateNameConverter"/>
            
            <!-- STYLES -->

            <Style x:Key="HeaderButtonStyle" TargetType="{x:Type controlsex:ButtonEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MinHeight" Value="40"/>
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBorderBrush" Value="{Binding ConfigManager.PressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedForeground" Value="{Binding ConfigManager.PressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ScrollViewerEx}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="PanningMode" Value="Both"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="ScrollBarDraggingThumbBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarMouseOverThumbBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarThumbBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ExpanderEx}">
                <Setter Property="ArrowBrush" Value="{Binding ConfigManager.ContrastedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ArrowMouseOverBrush" Value="{Binding ConfigManager.ContrastedMouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ArrowPressedBrush" Value="{Binding ConfigManager.ContrastedPressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Background" Value="{Binding ConfigManager.BackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HeaderBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="HeaderBorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="HeaderFontSize" Value="18"/>
                <Setter Property="HeaderFontWeight" Value="SemiBold"/>
                <Setter Property="HeaderForeground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="8"/>
            </Style>

            <Style TargetType="controlsex:CheckBoxEx">
                <Setter Property="CheckBoxStyle" Value="Bordered"/>
                <Setter Property="CheckMarkBrush" Value="{Binding ConfigManager.ContrastedColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MouseOverCheckMarkBrush" Value="{Binding ConfigManager.ContrastedMouseOverColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedCheckMarkBrush" Value="{Binding ConfigManager.ContrastedPressedColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ComboBoxEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.SubcomponentBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownBackground" Value="{Binding ConfigManager.SubcomponentBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownBorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownForeground" Value="{Binding ConfigManager.SubcomponentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownIconBrush" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownMouseOverIconBrush" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="DropDownSelectedIconBrush" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.SubcomponentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MinWidth" Value="128"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.SubcomponentBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.SubcomponentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBackground" Value="{Binding ConfigManager.SubcomponentBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBorderBrush" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedForeground" Value="{Binding ConfigManager.SubcomponentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ComboBoxItemEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.SubcomponentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBackground" Value="{Binding ConfigManager.SelectedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBorderBrush" Value="{Binding ConfigManager.SelectedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedForeground" Value="{Binding ConfigManager.SelectedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <!-- DATA TEMPLATES -->

            <DataTemplate x:Key="MarqueeStatesDataTemplate">
                <TextBlock Text="{Binding ., Converter={StaticResource MarqueeStateNameConverter}}"/>
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <controlsex:ScrollViewerEx
            Grid.Row="1"
            Padding="8,8,4,8">

            <StackPanel
                Margin="0"
                Orientation="Vertical">

                <controlsex:ExpanderEx
                    Header="Player"
                    Margin="0,0,0,8">

                    <StackPanel
                        Orientation="Vertical">

                        <controlsex:CheckBoxEx
                            Content="Show advanced playing time"
                            IsChecked="{Binding ConfigManager.InformationBarAdvancedTime}"
                            Margin="0,0,0,8"/>

                        <controlsex:CheckBoxEx
                            Content="Show application version on screen"
                            IsChecked="{Binding ConfigManager.ShowVersionOnScreen}"/>

                    </StackPanel>
                </controlsex:ExpanderEx>

                <controlsex:ExpanderEx
                    Header="Playlist"
                    Margin="0,0,0,8">

                    <StackPanel
                        Orientation="Vertical">

                        <controlsex:CheckBoxEx
                            Content="Restore last playing playlist"
                            IsChecked="{Binding ConfigManager.RestoreLastPlaylistOnStartup}"/>

                    </StackPanel>
                </controlsex:ExpanderEx>

                <controlsex:ExpanderEx
                    Header="Window"
                    Margin="0,0,0,8">

                    <StackPanel
                        Orientation="Vertical">

                        <controlsex:CheckBoxEx
                            Content="Show song title in window title bar"
                            IsChecked="{Binding ConfigManager.TitleBarSongInfo}"
                            Margin="0,0,0,16"/>

                        <TextBlock
                            Margin="0,0,0,8"
                            Text="Song title text marquee:"/>

                        <controlsex:ComboBoxEx
                            ItemTemplate="{StaticResource MarqueeStatesDataTemplate}"
                            ItemsSource="{Binding TitleMarqueeStates}"
                            SelectedItem="{Binding ConfigManager.TitleBarSongInfoMarqueeState}"/>

                    </StackPanel>
                </controlsex:ExpanderEx>

            </StackPanel>
        </controlsex:ScrollViewerEx>

        <Grid
            Grid.Row="0"
            Margin="8,8,8,2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controlsex:ButtonEx
                Grid.Column="0"
                IconKind="ArrowBack"
                Style="{StaticResource HeaderButtonStyle}"
                Click="BackButton_Click"/>

            <TextBlock
                Grid.Column="1"
                FontSize="18"
                FontWeight="SemiBold"
                Margin="8,0"
                Text="Settings - General"
                VerticalAlignment="Center"/>

            <controlsex:ButtonEx
                Grid.Column="2"
                IconKind="Close"
                Style="{StaticResource HeaderButtonStyle}"
                Click="CloseButton_Click"/>

        </Grid>

    </Grid>
</Page>
