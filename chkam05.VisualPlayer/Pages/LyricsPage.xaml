<Page 
    x:Class="chkam05.VisualPlayer.Pages.LyricsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:components="clr-namespace:chkam05.VisualPlayer.Components"
    xmlns:controls="clr-namespace:chkam05.VisualPlayer.Controls"
    xmlns:converters="clr-namespace:chkam05.VisualPlayer.Converters"
    xmlns:local="clr-namespace:chkam05.VisualPlayer.Pages"
    xmlns:controlsex="clr-namespace:chkam05.Tools.ControlsEx;assembly=chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Foreground="White"
    Loaded="Page_Loaded"
    Unloaded="Page_Unloaded">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/GridViewColumnHeaderStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/ListViewExStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <RelativeSource x:Key="RelativeSelf" Mode="FindAncestor" AncestorType="{x:Type Page}"/>

            <!-- Storyboards. -->
            <Storyboard x:Key="ShowHideLyricsFilesStoryboard" Completed="Storyboard_Completed">
                <ThicknessAnimationUsingKeyFrames
                    BeginTime="00:00:0"
                    Duration="00:00:0.25"
                    Storyboard.TargetName="LyricsFilesGrid"
                    Storyboard.TargetProperty="Margin">
                    <ThicknessAnimationUsingKeyFrames.KeyFrames>
                        <LinearThicknessKeyFrame Value="{Binding Path=LyricsFilesListMargin, Mode=TwoWay}"/>
                    </ThicknessAnimationUsingKeyFrames.KeyFrames>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            
            <!-- Styles. -->
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style x:Key="HeaderButtonStyle" TargetType="{x:Type controlsex:ButtonEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="MinHeight" Value="40"/>
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBorderBrush" Value="{Binding ConfigManager.PressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedForeground" Value="{Binding ConfigManager.PressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="MenuButtonStyle" TargetType="{x:Type controlsex:ButtonEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ContentSide" Value="Right"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="MinWidth" Value="72"/>
                <Setter Property="MaxWidth" Value="192"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Padding" Value="4,4,8,4"/>
                <Setter Property="PressedBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBorderBrush" Value="{Binding ConfigManager.PressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedForeground" Value="{Binding ConfigManager.PressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ScrollViewerEx}">
                <Setter Property="ScrollBarThumbMargin" Value="0,2,8,2"/>
                <Setter Property="ScrollBarVerticalWidth" Value="16"/>
                <Setter Property="ScrollBarThumbBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarThumbBorderBrush" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarDraggingThumbBackground" Value="{Binding ConfigManager.IfacePressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarDraggingThumbBorderBrush" Value="{Binding ConfigManager.IfacePressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarMouseOverThumbBackground" Value="{Binding ConfigManager.IfaceMouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollBarMouseOverThumbBorderBrush" Value="{Binding ConfigManager.IfaceMouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style BasedOn="{StaticResource ListViewExStyle}" TargetType="{x:Type controlsex:ListViewEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ColumnHeaderBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderBorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderEmptyBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderEmptyBorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderForeground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderMouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderMouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderMouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderPressedBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderPressedBorderBrush" Value="{Binding ConfigManager.PressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ColumnHeaderPressedForeground" Value="{Binding ConfigManager.PressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
            </Style>

            <Style x:Key="Config_ListViewItemExStyle" BasedOn="{StaticResource ListViewItemExStyle}" TargetType="{x:Type controlsex:ListViewItemEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBackground" Value="{Binding ConfigManager.SelectedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBorderBrush" Value="{Binding ConfigManager.SelectedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedForeground" Value="{Binding ConfigManager.SelectedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveBackground" Value="{Binding ConfigManager.InactiveBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveBorderBrush" Value="{Binding ConfigManager.InactiveBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedInactiveForeground" Value="{Binding ConfigManager.InactiveForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="LyricsFiles_ListViewItemExStyle" BasedOn="{StaticResource Config_ListViewItemExStyle}" TargetType="{x:Type controlsex:ListViewItemEx}"/>
            <Style x:Key="LyricsGrid_ListViewItemExStyle" BasedOn="{StaticResource Config_ListViewItemExStyle}" TargetType="{x:Type controlsex:ListViewItemEx}"/>

            <Style x:Key="LyricsUpdateButtonStyle" TargetType="{x:Type controlsex:ButtonEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.AccentForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="IconHeight" Value="20"/>
                <Setter Property="IconMargin" Value="0"/>
                <Setter Property="Margin" Value="4,0"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="PressedBackground" Value="{Binding ConfigManager.PressedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedBorderBrush" Value="{Binding ConfigManager.PressedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="PressedForeground" Value="{Binding ConfigManager.PressedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>
            
            <Style TargetType="{x:Type controlsex:TextBoxEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBackground" Value="{Binding ConfigManager.SelectedBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedBorderBrush" Value="{Binding ConfigManager.SelectedBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedForeground" Value="{Binding ConfigManager.SelectedForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="SelectedTextBackground" Value="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>
            
            <Style TargetType="{x:Type controlsex:ContextMenuEx}">
                <Setter Property="Background" Value="{Binding ConfigManager.BackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderBrush" Value="{Binding ConfigManager.BorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <Style TargetType="{x:Type controlsex:ContextMenuItemEx}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBackground" Value="{Binding ConfigManager.MouseOverBackgroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverBorderBrush" Value="{Binding ConfigManager.MouseOverBorderColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="MouseOverForeground" Value="{Binding ConfigManager.MouseOverForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
                <Setter Property="IconColorBrush" Value="{Binding ConfigManager.ForegroundColorBrush, RelativeSource={StaticResource RelativeSelf}}"/>
            </Style>

            <!-- Data Templates. -->
            <DataTemplate x:Key="LyricsFilesDataTemplate">
                <StackPanel Orientation="Horizontal">

                    <materialDesign:PackIcon
                        Kind="FileDocument"
                        Height="20"
                        Width="auto"/>

                    <TextBlock
                        Margin="8,0"
                        Text="{Binding .}"
                        VerticalAlignment="Center"/>
                    
                </StackPanel>
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="3"
            Background="{Binding ConfigManager.BackgroundColorBrush}"
            CornerRadius="8"
            Margin="8,2,8,8"
            Padding="4">

            <Grid>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel
                    Grid.Column="0"
                    Orientation="Horizontal">

                    <controlsex:ButtonEx
                        IconKind="Rewind"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Revind 100 ms"
                        Click="FastRewindBackButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="StepBackward"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Revind 10 ms"
                        Click="RewindBackButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="Stop"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Stop and back to point"
                        Click="StopBackButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="StepForward2"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Set point and play"
                        Click="CheckPointPlayButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="StepForward"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Forward 10 ms"
                        Click="ForwardButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="FastForward"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Forward 100 ms"
                        Click="FastForwardButton_Click"/>

                </StackPanel>

                <StackPanel
                    Grid.Column="2"
                    Orientation="Horizontal">

                    <StackPanel
                        Orientation="Vertical"
                        VerticalAlignment="Center"
                        Width="96">

                        <TextBlock
                            Foreground="{Binding ConfigManager.ForegroundColorBrush}"
                            Text="Check point:"/>

                        <TextBlock
                            Foreground="{Binding ConfigManager.ForegroundColorBrush}"
                            Text="{Binding CheckPoint, StringFormat=hh\\:mm\\:ss\\.fff}"/>

                    </StackPanel>

                    <StackPanel
                        Margin="8,0"
                        Orientation="Vertical"
                        VerticalAlignment="Center"
                        Width="96">

                        <TextBlock
                            Foreground="{Binding ConfigManager.ForegroundColorBrush}"
                            Text="Current position:"/>

                        <TextBlock
                            Foreground="{Binding ConfigManager.ForegroundColorBrush}"
                            Text="{Binding CurrentPosition, StringFormat=hh\\:mm\\:ss\\.fff}"/>

                    </StackPanel>

                    <controlsex:ButtonEx
                        IconKind="AddCircle"
                        ToolTip="Add Text"
                        Click="AddLyricsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource HeaderButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                </StackPanel>

            </Grid>

        </Border>

        <Grid
            Grid.Row="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controlsex:ListViewEx
                x:Name="lyricsListView"
                Grid.Column="0"
                ItemContainerStyle="{StaticResource LyricsGrid_ListViewItemExStyle}"
                ItemsSource="{Binding LyricsManager.DataContext, Mode=TwoWay}"
                Margin="8"
                SelectedItem="{Binding SelectedLyrics}">

                <controlsex:ListViewEx.View>
                    <GridView
                        ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">

                        <GridView.Columns>

                            <GridViewColumn Header="Start" Width="144">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">

                                            <controlsex:TextBoxEx
                                                ConversionType="TimeSpan"
                                                MinWidth="96"
                                                Text="{Binding Path=DataContext.StartTime, RelativeSource={RelativeSource AncestorType={x:Type controlsex:ListViewItemEx}}, StringFormat=hh\\:mm\\:ss\\.fff}"
                                                TextModified="StartTime_ExtendedTextBox_OnContentUpdated"
                                                VerticalAlignment="Center"/>

                                            <controlsex:ButtonEx
                                                IconKind="Update"
                                                Style="{StaticResource LyricsUpdateButtonStyle}"
                                                ToolTip="Set current time"
                                                Click="StartTimeUpdate_PackIconButton_Click"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="End" Width="144">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">

                                            <controlsex:TextBoxEx
                                                ConversionType="TimeSpan"
                                                MinWidth="96"
                                                Text="{Binding Path=DataContext.EndTime, RelativeSource={RelativeSource AncestorType={x:Type controlsex:ListViewItemEx}}, StringFormat=hh\\:mm\\:ss\\.fff}"
                                                TextModified="EndTime_ExtendedTextBox_OnContentUpdated"
                                                VerticalAlignment="Center"/>

                                            <controlsex:ButtonEx
                                                IconKind="Update"
                                                Style="{StaticResource LyricsUpdateButtonStyle}"
                                                ToolTip="Set current time"
                                                Click="EndTimeUpdate_PackIconButton_Click"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Text" Width="256">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal"
                                            VerticalAlignment="Center">

                                            <controlsex:TextBoxEx
                                                HorizontalAlignment="Stretch"
                                                Margin="0,6"
                                                MinWidth="96"
                                                Text="{Binding Text}"
                                                TextModified="Text_ExtendedTextBox_OnContentUpdated"
                                                VerticalAlignment="Center"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView.Columns>
                    </GridView>
                </controlsex:ListViewEx.View>

                <controlsex:ListViewEx.ContextMenu>
                    <controlsex:ContextMenuEx>

                        <controlsex:ContextMenuItemEx
                            Header="Add text"
                            IconKind="Add"
                            Click="Lyrics_AddExtendedContextMenuItem_Click"/>

                        <controlsex:ContextMenuItemEx
                            Header="Remove selected"
                            IconKind="Close"
                            Click="Lyrics_RemoveExtendedContextMenuItem_Click"/>

                        <controlsex:ContextMenuItemEx
                            Header="Clear"
                            IconKind="Trash"
                            Click="Lyrics_ClearExtendedContextMenuItem_Click"/>

                    </controlsex:ContextMenuEx>
                </controlsex:ListViewEx.ContextMenu>

            </controlsex:ListViewEx>

            <Grid
                x:Name="LyricsFilesGrid"
                Grid.Column="1"
                Margin="0,0,-384,0"
                Width="384">

                <Border
                    Background="{Binding ConfigManager.BackgroundColorBrush}"
                    Grid.Column="1"
                    CornerRadius="8"
                    Margin="8,8,8,8">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            FontSize="18"
                            FontWeight="SemiBold"
                            HorizontalAlignment="Left"
                            Margin="8"
                            Text="Local library:"
                            VerticalAlignment="Center"/>

                        <Border
                            Background="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"
                            BorderBrush="{Binding ConfigManager.AccentColorBrush, RelativeSource={StaticResource RelativeSelf}}"
                            BorderThickness="1"
                            CornerRadius="8"
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            Margin="8,8,8,0"
                            Padding="8">

                            <StackPanel
                                Orientation="Horizontal">

                                <controlsex:TextBoxEx
                                    x:Name="lyricsSearchExtendedTextBox"
                                    Width="160"
                                    TextModified="LyricsFilesSearch_TextModified"/>

                                <materialDesign:PackIcon
                                    Foreground="{Binding ConfigManager.ForegroundColorBrush}"
                                    Height="auto"
                                    Kind="Search"
                                    Margin="4,0,0,0"
                                    VerticalAlignment="Stretch"
                                    Width="auto"/>

                            </StackPanel>
                        </Border>

                        <controlsex:ListViewEx
                            x:Name="lyricsFilesView"
                            Grid.Row="2"
                            ItemContainerStyle="{StaticResource LyricsFiles_ListViewItemExStyle}"
                            ItemsSource="{Binding LyricsFilesList, Mode=TwoWay}"
                            ItemTemplate="{StaticResource LyricsFilesDataTemplate}"
                            Margin="8">

                            <controlsex:ListViewEx.ContextMenu>
                                <controlsex:ContextMenuEx>

                                    <controlsex:ContextMenuItemEx
                                        Header="Remove selected"
                                        IconKind="Close"
                                        Click="LyricsFile_RemoveExtendedContextMenuItem_Click"/>

                                </controlsex:ContextMenuEx>
                            </controlsex:ListViewEx.ContextMenu>

                        </controlsex:ListViewEx>

                    </Grid>

                </Border>

            </Grid>

        </Grid>

        <Border
            Grid.Row="1"
            Background="{Binding ConfigManager.BackgroundColorBrush}"
            CornerRadius="8"
            Margin="8,2"
            Padding="4">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel
                    Grid.Column="0"
                    Orientation="Horizontal">

                    <controlsex:ButtonEx
                        Content="Create"
                        IconKind="File"
                        Click="NewLyricsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource MenuButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                    <controlsex:ButtonEx
                        Content="Library Search"
                        IconKind="FolderSearch"
                        Click="OpenFromLibraryLyricsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource MenuButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                    <controlsex:ButtonEx
                        Content="Open"
                        IconKind="FolderOpen"
                        Click="OpenLyricsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource MenuButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                    <controlsex:ButtonEx
                        Content="Save to Library"
                        IconKind="ContentSave"
                        Click="SaveLyricsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource MenuButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding LyricsManager.DataContext.Count}" Value="0"/>
                                            <Condition Binding="{Binding LyricsManager.LyricsChanged}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LyricsManager.LyricsChanged}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                    <controlsex:ButtonEx
                        Content="Save As"
                        IconKind="ContentSaveEdit"
                        Click="SaveLyricsAsButton_Click">

                        <controlsex:ButtonEx.Style>
                            <Style BasedOn="{StaticResource MenuButtonStyle}" TargetType="{x:Type controlsex:ButtonEx}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LyricsManager.DataContext.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LyricsManager.LoadedFile}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controlsex:ButtonEx.Style>

                    </controlsex:ButtonEx>

                </StackPanel>

                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    Margin="8,0"
                    Text="{Binding LyricsManager.LoadedFile.FileName}"
                    TextWrapping="WrapWithOverflow"
                    VerticalAlignment="Center"/>

                <StackPanel
                    Grid.Column="2"
                    Orientation="Horizontal">

                    <controlsex:ButtonEx
                        IconKind="SortTimeAscending"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Sort by Start Time"
                        Click="SortLyrics_PackIconButton_Click"/>

                    <controlsex:ButtonEx
                        IconKind="ViewList"
                        Style="{StaticResource HeaderButtonStyle}"
                        ToolTip="Library"
                        Click="LocalLyrics_PackIconButton_Click"/>

                </StackPanel>

            </Grid>

        </Border>
        
        <Grid
            Grid.Row="0"
            Margin="8,8,8,2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controlsex:ButtonEx
                Grid.Column="0"
                IconKind="ArrowBack"
                Style="{StaticResource HeaderButtonStyle}"
                Click="BackButton_Click"/>

            <TextBlock
                Grid.Column="1"
                FontSize="18"
                FontWeight="SemiBold"
                Margin="8,0"
                Text="Lyrics Manager"
                VerticalAlignment="Center"/>

        </Grid>

    </Grid>
    
</Page>
