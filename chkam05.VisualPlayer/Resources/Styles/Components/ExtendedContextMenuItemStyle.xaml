<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:chkam05.VisualPlayer.Components"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <CornerRadius x:Key="ExtendedContextMenuItem.CornerRadius">4</CornerRadius>
    <CornerRadius x:Key="ExtendedContextSubMenu.CornerRadius">8</CornerRadius>
    
    <ControlTemplate x:Key="ExtendedContextMenuItemDataTemplate" TargetType="{x:Type components:ExtendedContextMenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{StaticResource ExtendedContextMenuItem.CornerRadius}"
            SnapsToDevicePixels="True">
            
            <Grid Margin="-1">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    Grid.Column="0"
                    Kind="{TemplateBinding Icon}"
                    HorizontalAlignment="Center"
                    Height="16"
                    Margin="4"
                    VerticalAlignment="Center"
                    Width="16"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="22"
                    Kind="CheckboxBlankOutline"
                    Margin="-1,0,0,0"
                    Visibility="Hidden"
                    VerticalAlignment="Center"
                    Width="22"/>

                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>
                
                <TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    Margin="{TemplateBinding Padding}"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>

            <!-- No Icon. -->
            <DataTrigger Binding="{Binding Icon}" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </DataTrigger>

            <!-- Is Checkable. -->
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <!-- Is Checked. -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckboxOutline"/>
            </Trigger>

            <!-- Is Highlighted. -->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding HoveredBackground, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedContextMenuItem}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding HoveredBorder, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedContextMenuItem}}}"/>
            </Trigger>
            
            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ExtendedChildishContextMenuItemWithDataTemplate" TargetType="{x:Type components:ExtendedContextMenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{StaticResource ExtendedContextMenuItem.CornerRadius}"
            SnapsToDevicePixels="True">
            
            <Grid Margin="-1">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    Grid.Column="0"
                    Kind="{TemplateBinding Icon}"
                    HorizontalAlignment="Center"
                    Height="16"
                    Margin="4"
                    VerticalAlignment="Center"
                    Width="16"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="22"
                    Kind="CheckboxBlankOutline"
                    Margin="-1,0,0,0"
                    Visibility="Hidden"
                    VerticalAlignment="Center"
                    Width="22"/>

                <ContentPresenter
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>
                
                <TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    Margin="{TemplateBinding Padding}"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>

                <materialDesign:PackIcon
                    x:Name="RightArrow"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="5"
                    Kind="ChevronRight"
                    HorizontalAlignment="Left"
                    Margin="5,0"
                    VerticalAlignment="Center"/>

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    Placement="Right"
                    VerticalOffset="-3">
                    
                    <Border
                        x:Name="SubMenuBorder"
                        Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type components:ExtendedContextMenu}}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type components:ExtendedContextMenu}}}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type components:ExtendedContextMenu}}}"
                        CornerRadius="{StaticResource ExtendedContextSubMenu.CornerRadius}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type components:ExtendedContextMenu}}}">
                        
                        <ScrollViewer
                            x:Name="SubMenuScrollViewer"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            
                            <Grid
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">

                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="Transparent"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>

                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    Grid.IsSharedSizeScope="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            
            <!-- Is Suspending Popup Animation. -->
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>

            <!-- No Icon. -->
            <DataTrigger Binding="{Binding Icon}" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </DataTrigger>

            <!-- Is Checkable. -->
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <!-- Is Checked. -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckboxOutline"/>
            </Trigger>

            <!-- Is Highlighted. -->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding HoveredBackground, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedContextMenuItem}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding HoveredBorder, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedContextMenuItem}}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>
            
            <!-- Can Content Scroll. -->
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExtendedContextMenuItemStyle" TargetType="{x:Type components:ExtendedContextMenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Icon" Value="None"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Template" Value="{StaticResource ExtendedContextMenuItemDataTemplate}"/>

        <Style.Triggers>
            
            <!-- Has Items. -->
            <Trigger Property="HasItems" Value="True">
                <Setter Property="Template" Value="{StaticResource ExtendedChildishContextMenuItemWithDataTemplate}"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

</ResourceDictionary>