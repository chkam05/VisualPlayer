<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:chkam05.VisualPlayer.Components"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="ExtendedCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExtendedCheckBoxOptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExtendedCheckBoxStyle" TargetType="{x:Type components:ExtendedCheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ExtendedCheckBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:ExtendedCheckBox}">
                    
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border
                            x:Name="checkBoxBorder"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <Grid x:Name="markGrid">

                                <materialDesign:PackIcon
                                    x:Name="optionMark"
                                    Foreground="{TemplateBinding GlyphColor}"
                                    HorizontalAlignment="Left"
                                    Kind="CheckboxBlank"
                                    Margin="0"
                                    MinHeight="24"
                                    MinWidth="24"/>

                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Fill="Transparent"
                                    Stroke="Transparent"/>
                            </Grid>
                        </Border>
                        
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        
                        <!-- Has Content. -->
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource ExtendedCheckBoxOptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        
                        <!-- Is Mouse Over. -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="optionMark" Value="{Binding HoveredGlyph, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedCheckBox}}}"/>
                        </Trigger>
                        
                        <!-- Is Disabled. -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </Trigger>
                        
                        <!-- Is Pressed. -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="optionMark" Value="{Binding PressedGlyph, RelativeSource={RelativeSource AncestorType={x:Type components:ExtendedCheckBox}}}"/>
                        </Trigger>
                        
                        <!-- Is Checked. -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Kind" TargetName="optionMark" Value="CheckboxOutline"/>
                        </Trigger>
                        
                        <!-- Is Unchecked. -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Kind" TargetName="optionMark" Value="CheckboxBlank"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>