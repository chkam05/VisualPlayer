<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:cfg="clr-namespace:VisualPlayer.Data.Configuration"
    xmlns:ctrls="clr-namespace:VisualPlayer.Controls"
    xmlns:enums="clr-namespace:VisualPlayer.Data.Enums"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- STATIC -->

    <x:Static x:Key="ConfigMgr" Member="cfg:ConfigurationManager.Instance"/>
    <RelativeSource x:Key="CustomButton.Source" AncestorType="{x:Type ctrls:CustomButton}"/>


    <!-- RELATED STYLES -->

    <Style x:Key="CustomButton.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{Binding BackgroundMouseOver, RelativeSource={StaticResource CustomButton.Source}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- CONTROL TEMPLATE -->

    <ControlTemplate x:Key="CustomButton.ControlTemplate" TargetType="{x:Type ctrls:CustomButton}">
        <Border
            x:Name="_backgroundBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">

            <Grid
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="_leftCollumn" Width="*"/>
                    <ColumnDefinition x:Name="_rightCollumn" Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="_topRow" Height="*"/>
                    <RowDefinition x:Name="_bottomRow" Height="*"/>
                </Grid.RowDefinitions>

                <materialDesign:PackIcon
                    x:Name="_packIcon"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="0"
                    Grid.Row="0"
                    Height="{TemplateBinding IconHeight}"
                    HorizontalAlignment="Stretch"
                    Kind="{TemplateBinding IconKind}"
                    VerticalAlignment="Stretch"
                    Width="{TemplateBinding IconWidth}"/>

                <ContentPresenter
                    x:Name="_contentPresenter"
                    Focusable="False"
                    Grid.Column="1"
                    Grid.Row="0"
                    HorizontalAlignment="Stretch"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Stretch"/>

            </Grid>

        </Border>

        <ControlTemplate.Triggers>

            <!-- Is Mouse Over. -->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="_backgroundBorder" Value="{Binding BackgroundMouseOver, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="BorderBrush" TargetName="_backgroundBorder" Value="{Binding BorderBrushMouseOver, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="Foreground" TargetName="_packIcon" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="_contentPresenter" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomButton.Source}}"/>
            </Trigger>

            <!-- Is Pressed. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="_backgroundBorder" Value="{Binding BackgroundPressed, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="BorderBrush" TargetName="_backgroundBorder" Value="{Binding BorderBrushPressed, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="Foreground" TargetName="_packIcon" Value="{Binding ForegroundPressed, RelativeSource={StaticResource CustomButton.Source}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="_contentPresenter" Value="{Binding ForegroundPressed, RelativeSource={StaticResource CustomButton.Source}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="_backgroundBorder" Value="0.56"/>
            </Trigger>

            <!-- Has No Content. -->
            <Trigger Property="HasContent" Value="False">
                <Setter TargetName="_contentPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            
            <!-- Has No Icon. -->
            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter TargetName="_packIcon" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <!-- Content position Right. -->
            <Trigger Property="ContentPosition" Value="{x:Static enums:ButtonContentPosition.Right}">
                <Setter TargetName="_packIcon" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_packIcon" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Column" Value="1"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="HorizontalAlignment" Value="Stretch"/>
                <Setter TargetName="_contentPresenter" Property="VerticalAlignment" Value="Center"/>

                <Setter TargetName="_leftCollumn" Property="Width" Value="*"/>
                <Setter TargetName="_rightCollumn" Property="Width" Value="Auto"/>
                <Setter TargetName="_topRow" Property="Height" Value="*"/>
                <Setter TargetName="_bottomRow" Property="Height" Value="Auto"/>
            </Trigger>

            <!-- Content position Bottom. -->
            <Trigger Property="ContentPosition" Value="{x:Static enums:ButtonContentPosition.Bottom}">
                <Setter TargetName="_packIcon" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_packIcon" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Row" Value="1"/>
                <Setter TargetName="_contentPresenter" Property="HorizontalAlignment" Value="Center"/>
                <Setter TargetName="_contentPresenter" Property="VerticalAlignment" Value="Stretch"/>

                <Setter TargetName="_leftCollumn" Property="Width" Value="*"/>
                <Setter TargetName="_rightCollumn" Property="Width" Value="Auto"/>
                <Setter TargetName="_topRow" Property="Height" Value="*"/>
                <Setter TargetName="_bottomRow" Property="Height" Value="Auto"/>
            </Trigger>

            <!-- Content position Left. -->
            <Trigger Property="ContentPosition" Value="{x:Static enums:ButtonContentPosition.Left}">
                <Setter TargetName="_packIcon" Property="Grid.Column" Value="1"/>
                <Setter TargetName="_packIcon" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="HorizontalAlignment" Value="Stretch"/>
                <Setter TargetName="_contentPresenter" Property="VerticalAlignment" Value="Center"/>

                <Setter TargetName="_leftCollumn" Property="Width" Value="Auto"/>
                <Setter TargetName="_rightCollumn" Property="Width" Value="*"/>
                <Setter TargetName="_topRow" Property="Height" Value="*"/>
                <Setter TargetName="_bottomRow" Property="Height" Value="Auto"/>
            </Trigger>

            <!-- Content position Top. -->
            <Trigger Property="ContentPosition" Value="{x:Static enums:ButtonContentPosition.Top}">
                <Setter TargetName="_packIcon" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_packIcon" Property="Grid.Row" Value="1"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Column" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="Grid.Row" Value="0"/>
                <Setter TargetName="_contentPresenter" Property="HorizontalAlignment" Value="Center"/>
                <Setter TargetName="_contentPresenter" Property="VerticalAlignment" Value="Stretch"/>

                <Setter TargetName="_leftCollumn" Property="Width" Value="*"/>
                <Setter TargetName="_rightCollumn" Property="Width" Value="Auto"/>
                <Setter TargetName="_topRow" Property="Height" Value="Auto"/>
                <Setter TargetName="_bottomRow" Property="Height" Value="*"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    

    <!-- STYLE -->

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type ctrls:CustomButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding Appearance.AccentMouseOverBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="BackgroundPressed" Value="{Binding Appearance.AccentPressedBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding Appearance.AccentColorBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="BorderBrushPressed" Value="{Binding Appearance.AccentColorBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ContentPosition" Value="Right"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Foreground" Value="{Binding Appearance.AccentForegroundBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding Appearance.AccentForegroundBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="ForegroundPressed" Value="{Binding Appearance.AccentForegroundBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CustomButton.FocusVisual}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IconHeight" Value="24"/>
        <Setter Property="IconKind" Value="None"/>
        <Setter Property="IconWidth" Value="24"/>
        <Setter Property="Margin" Value="4,2"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template" Value="{StaticResource CustomButton.ControlTemplate}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="28"/>
    </Style>

</ResourceDictionary>