<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:cfg="clr-namespace:VisualPlayer.Data.Configuration"
    xmlns:conv="clr-namespace:VisualPlayer.Converters"
    xmlns:ctrls="clr-namespace:VisualPlayer.Controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<!-- STATIC -->

	<x:Static x:Key="ConfigMgr" Member="cfg:ConfigurationManager.Instance"/>
	<RelativeSource x:Key="CustomContextMenuItem.Source" AncestorType="{x:Type ctrls:CustomContextMenuItem}"/>
	<RelativeSource x:Key="CustomContextMenu.Source" AncestorType="{x:Type ctrls:CustomContextMenu}" Mode="FindAncestor"/>
	<GridLength x:Key="CustomContextMenuItem.Separator1.ColumnWidth">8</GridLength>
	<GridLength x:Key="CustomContextMenuItem.Separator2.ColumnWidth">16</GridLength>
	<GridLength x:Key="CustomContextMenuItem.SubMenu.ColumnWidth">32</GridLength>
	
	
	<!-- CONTENT TEMPLATES -->

	<ControlTemplate x:Key="CustomContextMenuItem.DataTemplate" TargetType="{x:Type ctrls:CustomContextMenuItem}">
		<Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
			Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">

			<Grid Margin="-1">

				<Grid.ColumnDefinitions>
					<!-- Icon/CheckBox -->
					<ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<!-- Separator -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.Separator1.ColumnWidth}"/>
					<!-- Content -->
					<ColumnDefinition Width="*"/>
					<!-- Separator -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.Separator2.ColumnWidth}"/>
					<!-- Shortcut Text -->
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
					<!-- Separator/Next Button -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.SubMenu.ColumnWidth}"/>
				</Grid.ColumnDefinitions>

				<Grid
                    Grid.Column="0">

					<!-- Icon -->
					<ContentPresenter
                        x:Name="Icon"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
						Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Stretch"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

					<!-- PackIcon -->
					<materialDesign:PackIcon
                        x:Name="packIcon"
                        HorizontalAlignment="Center"
                        Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        Kind="{TemplateBinding IconKind}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Stretch"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

					<!-- CheckBox -->
					<materialDesign:PackIcon
                        x:Name="GlyphPanel"
                        Foreground="{TemplateBinding Foreground}"
						Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        HorizontalAlignment="Stretch"
                        Kind="CheckBoxOutlineBlank"
                        Visibility="Hidden"
                        VerticalAlignment="Center"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

				</Grid>

				<ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>

				<TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    HorizontalAlignment="Left"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>
				
			</Grid>
		</Border>

		<ControlTemplate.Triggers>

			<!-- No Icon. -->
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>

			<!-- No Pack Icon. -->
			<Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
				<Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
			</Trigger>

			<!-- Is Checkable. -->
			<Trigger Property="IsCheckable" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
			</Trigger>

			<!-- Is Checked. -->
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
			</Trigger>

			<!-- Is Highlighted. -->
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="Foreground" TargetName="menuGestureText" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
			</Trigger>

			<!-- Is Disabled. -->
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="CustomContextMenuItem.Container.DataTemplate" TargetType="{x:Type ctrls:CustomContextMenuItem}">
		<Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
			Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">

			<Grid Margin="-1">

				<Grid.ColumnDefinitions>
					<!-- Icon/CheckBox -->
					<ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<!-- Separator -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.Separator1.ColumnWidth}"/>
					<!-- Content -->
					<ColumnDefinition Width="*"/>
					<!-- Separator -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.Separator2.ColumnWidth}"/>
					<!-- Shortcut Text -->
					<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
					<!-- Separator/Next Button -->
					<ColumnDefinition Width="{StaticResource CustomContextMenuItem.SubMenu.ColumnWidth}"/>
				</Grid.ColumnDefinitions>

				<Grid
                    Grid.Column="0">

					<!-- Icon -->
					<ContentPresenter
                        x:Name="Icon"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
						Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        HorizontalAlignment="Stretch"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Stretch"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

					<!-- PackIcon -->
					<materialDesign:PackIcon
                        x:Name="packIcon"
                        HorizontalAlignment="Center"
                        Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        Kind="{TemplateBinding IconKind}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Stretch"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

					<!-- CheckBox -->
					<materialDesign:PackIcon
                        x:Name="GlyphPanel"
                        Foreground="{TemplateBinding Foreground}"
						Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                        HorizontalAlignment="Stretch"
                        Kind="CheckBoxOutlineBlank"
                        Visibility="Hidden"
                        VerticalAlignment="Center"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>

				</Grid>

				<ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>

				<TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    HorizontalAlignment="Left"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>

				<materialDesign:PackIcon
                    x:Name="RightArrow"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="5"
                    Kind="ChevronRight"
                    HorizontalAlignment="Center"
                    Margin="4,0"
                    VerticalAlignment="Center"/>

				<Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    Placement="Right"
                    VerticalOffset="-3">

					<Border
                        x:Name="SubMenuBorder"
                        Background="{Binding Background, RelativeSource={StaticResource CustomContextMenu.Source}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={StaticResource CustomContextMenu.Source}}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={StaticResource CustomContextMenu.Source}}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={StaticResource CustomContextMenu.Source}}"
                        Padding="{Binding Padding, RelativeSource={StaticResource CustomContextMenu.Source}}">

						<ScrollViewer
                            x:Name="SubMenuScrollViewer"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

							<Grid
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="Enabled">
								
								<Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">

									<Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="Transparent"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
								</Canvas>

								<ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    Grid.IsSharedSizeScope="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    KeyboardNavigation.TabNavigation="Cycle"/>

							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
				
			</Grid>
		</Border>

		<ControlTemplate.Triggers>

			<!-- Is Suspending Popup Animation. -->
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>

			<!-- No Icon. -->
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>

			<!-- No Pack Icon. -->
			<Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
				<Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
			</Trigger>

			<!-- Is Checkable. -->
			<Trigger Property="IsCheckable" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
			</Trigger>

			<!-- Is Checked. -->
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
			</Trigger>

			<!-- Is Highlighted. -->
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
				<Setter Property="Foreground" TargetName="menuGestureText" Value="{Binding ForegroundMouseOver, RelativeSource={StaticResource CustomContextMenuItem.Source}}"/>
			</Trigger>

			<!-- Is Disabled. -->
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
			</Trigger>

			<!-- Can Content Scroll. -->
			<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
			</Trigger>
			
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	
	<!-- STYLES -->

	<Style x:Key="CustomContextMenuItemStyle" TargetType="{x:Type ctrls:CustomContextMenuItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BackgroundMouseOver" Value="{Binding Appearance.AccentMouseOverBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderBrushMouseOver" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{Binding Appearance.ThemeForegroundBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
		<Setter Property="ForegroundMouseOver" Value="{Binding Appearance.AccentForegroundBrush, Source={StaticResource ConfigMgr}, Mode=OneWay}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template" Value="{StaticResource CustomContextMenuItem.DataTemplate}"/>

		<Style.Triggers>

			<!-- Has Items. -->
			<Trigger Property="HasItems" Value="True">
				<Setter Property="Template" Value="{StaticResource CustomContextMenuItem.Container.DataTemplate}"/>
			</Trigger>

		</Style.Triggers>
	</Style>
    
</ResourceDictionary>